/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui.lab;

import DataBase.DBOperations;
import DataBase.Help;
import Domain.LabReport;
import javax.swing.DefaultCellEditor;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author Toshiba
 */
public class LabReportGUI extends javax.swing.JFrame {

    String testNumber;
    String str="";
    private DefaultCellEditor cellEditor;
    public LabReportGUI() {
        
        initComponents();
        FBCpanel.setVisible(false);
        FBSpanel.setVisible(false);
        TCpanel.setVisible(false);
        UFRpanel.setVisible(false);
        LPpanel.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleName = new javax.swing.JLabel();
        reportName = new javax.swing.JLabel();
        patientID = new javax.swing.JLabel();
        testID = new javax.swing.JLabel();
        testName = new javax.swing.JLabel();
        textPatientID = new javax.swing.JTextField();
        textTestName = new javax.swing.JTextField();
        detailsOfTestLable = new javax.swing.JLabel();
        labTechnicianID = new javax.swing.JLabel();
        date = new javax.swing.JLabel();
        textDate = new javax.swing.JTextField();
        TestBox = new javax.swing.JComboBox();
        detailPanel = new javax.swing.JPanel();
        TCpanel = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        CholesterolAmount = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        btnConfirmTC = new javax.swing.JButton();
        FBSpanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        fbsAmount = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btnconfirmFBS = new javax.swing.JButton();
        FBCpanel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        FBCtable = new javax.swing.JTable();
        btnConfirmFBC = new javax.swing.JButton();
        UFRpanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        UFRtable = new javax.swing.JTable();
        btnConfirmUFR = new javax.swing.JButton();
        LPpanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        LPtable = new javax.swing.JTable();
        btnConfirmLP = new javax.swing.JButton();
        textLabTecID = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        textYear = new javax.swing.JTextField();
        textMonth = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        titleName.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        titleName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleName.setText("COOPERATIVE HOSPITAL - MATARA");

        reportName.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        reportName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        reportName.setText("Patient Lab Report");

        patientID.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        patientID.setText("Patient ID:");

        testID.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        testID.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        testID.setText("Test ID :");

        testName.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        testName.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        testName.setText("Test Name:");

        textPatientID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textPatientIDActionPerformed(evt);
            }
        });

        textTestName.setEditable(false);
        textTestName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textTestNameActionPerformed(evt);
            }
        });
        textTestName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                textTestNameFocusGained(evt);
            }
        });

        detailsOfTestLable.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        detailsOfTestLable.setText("Details of the test");

        labTechnicianID.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        labTechnicianID.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labTechnicianID.setText("Lab Technician ID:");

        date.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        date.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        date.setText("Date:");

        textDate.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N

        TestBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", " " }));
        TestBox.setSelectedIndex(-1);
        TestBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TestBoxActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Total Cholesterol");

        CholesterolAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CholesterolAmountActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setText("mg/dl");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("( ANALYZED BY 3000 EVOLUTION SEMI AUTOMATED BIIO CHEMISTRY ANALYZER )");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Reference range : 140-239 mg/dl");

        btnConfirmTC.setText("Confirm");
        btnConfirmTC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmTCActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout TCpanelLayout = new javax.swing.GroupLayout(TCpanel);
        TCpanel.setLayout(TCpanelLayout);
        TCpanelLayout.setHorizontalGroup(
            TCpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(TCpanelLayout.createSequentialGroup()
                .addGap(121, 121, 121)
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(CholesterolAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addGap(124, 124, 124))
            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TCpanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnConfirmTC)
                .addGap(216, 216, 216))
        );
        TCpanelLayout.setVerticalGroup(
            TCpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TCpanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(TCpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CholesterolAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addComponent(jLabel11)
                .addGap(25, 25, 25)
                .addComponent(jLabel10)
                .addGap(18, 18, 18)
                .addComponent(btnConfirmTC)
                .addContainerGap(55, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Fasting Blood Sugar");

        fbsAmount.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("mg/dl");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Reference values : 70 - 110 mg/dl");
        jLabel7.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
                jLabel7AncestorMoved(evt);
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("( ANALYZED BY 3000 EVOLUTION SEMI AUTOMATED BIO CHEMISTRY ANALYZER )");

        btnconfirmFBS.setText("Confirm");
        btnconfirmFBS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnconfirmFBSActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout FBSpanelLayout = new javax.swing.GroupLayout(FBSpanel);
        FBSpanel.setLayout(FBSpanelLayout);
        FBSpanelLayout.setHorizontalGroup(
            FBSpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FBSpanelLayout.createSequentialGroup()
                .addGap(240, 240, 240)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(fbsAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                .addGap(295, 295, 295))
            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(FBSpanelLayout.createSequentialGroup()
                .addGap(459, 459, 459)
                .addComponent(btnconfirmFBS)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        FBSpanelLayout.setVerticalGroup(
            FBSpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FBSpanelLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(FBSpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fbsAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(41, 41, 41)
                .addComponent(jLabel7)
                .addGap(28, 28, 28)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addComponent(btnconfirmFBS)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        FBCpanel.setPreferredSize(new java.awt.Dimension(489, 278));

        FBCtable.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        FBCtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"White blood cells", null, "        K/µL", "   (4.0-11.0)"},
                {"Neutrophiles", null, "         %", "     (40-64)"},
                {"Lymphocytes", null, "         %", "     (10-40)"},
                {"Eosinophiles", null, "         %", "     (01-04)"},
                {"Monocytes", null, "         %", "     (02-05)"},
                {"Basophiles", null, "         %", "     (00-01)"},
                {"Abnormal cells", null, "         %", "     (00-00)"},
                {"Haemoglobin", null, "        g/dL", "(F 11-15)  (M 12-17.5)"},
                {"Red blood count", null, "        M/µL", "     (3.5-6)"},
                {"PCV", null, "         %", "(F 32-47)  (M 40-54)"},
                {"MCV", null, null, "    (70-96)"},
                {"MCH", null, "         pg", "    (27-32)"},
                {"MCHC", null, "        g/dL", "    (30-35)"},
                {"Platelet count", null, null, "   (150-450)"}
            },
            new String [] {
                "Descripition", "Result ", "Units", "Normal range"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        FBCtable.setColumnSelectionAllowed(true);
        FBCtable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                FBCtableKeyReleased(evt);
            }
        });
        jScrollPane3.setViewportView(FBCtable);
        FBCtable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        btnConfirmFBC.setText("Confirm");
        btnConfirmFBC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmFBCActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout FBCpanelLayout = new javax.swing.GroupLayout(FBCpanel);
        FBCpanel.setLayout(FBCpanelLayout);
        FBCpanelLayout.setHorizontalGroup(
            FBCpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 489, Short.MAX_VALUE)
            .addGroup(FBCpanelLayout.createSequentialGroup()
                .addGap(200, 200, 200)
                .addComponent(btnConfirmFBC)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        FBCpanelLayout.setVerticalGroup(
            FBCpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FBCpanelLayout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnConfirmFBC)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        UFRtable.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        UFRtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"COLOUR", null},
                {"APPEARANCE", null},
                {"PH", null},
                {"S.G", null},
                {"PROTEIN", null},
                {"SUGAR", null},
                {"BILIRUBIN", null},
                {"NITIRITE", null},
                {"KEYTONE", null},
                {"UROBILINOGEN", null},
                {"PUS CELLS", null},
                {"RED CELLS", null},
                {"EPI CELLS", null},
                {"CRYSTALS ", null},
                {"CAST", null},
                {"OTHER", null}
            },
            new String [] {
                "Symptoms", "Value"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        UFRtable.setColumnSelectionAllowed(true);
        jScrollPane2.setViewportView(UFRtable);
        UFRtable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        btnConfirmUFR.setText("Confirm");
        btnConfirmUFR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmUFRActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout UFRpanelLayout = new javax.swing.GroupLayout(UFRpanel);
        UFRpanel.setLayout(UFRpanelLayout);
        UFRpanelLayout.setHorizontalGroup(
            UFRpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UFRpanelLayout.createSequentialGroup()
                .addGroup(UFRpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(UFRpanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(UFRpanelLayout.createSequentialGroup()
                        .addGap(191, 191, 191)
                        .addComponent(btnConfirmUFR)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        UFRpanelLayout.setVerticalGroup(
            UFRpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UFRpanelLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnConfirmUFR))
        );

        LPtable.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        LPtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Total Cholesterol", null, "               mg/dl", "               239<"},
                {"Triglyserides", null, "               mg/dl", "            (40-160)"},
                {"HDL", null, "               mg/dl ", "                >35"},
                {"LDL", null, "               mg/dl", "               <160"},
                {"VLDL", null, "               mg/dl", "                <40"},
                {"CHO/HDL", null, "               mg/dl", "            (2.0-5.0)"}
            },
            new String [] {
                "Description", "Result", "Units", "Reference"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        LPtable.setColumnSelectionAllowed(true);
        LPtable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                LPtableKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                LPtableKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(LPtable);
        LPtable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        btnConfirmLP.setText("Confirm");
        btnConfirmLP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmLPActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout LPpanelLayout = new javax.swing.GroupLayout(LPpanel);
        LPpanel.setLayout(LPpanelLayout);
        LPpanelLayout.setHorizontalGroup(
            LPpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 577, Short.MAX_VALUE)
            .addGroup(LPpanelLayout.createSequentialGroup()
                .addGap(253, 253, 253)
                .addComponent(btnConfirmLP)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        LPpanelLayout.setVerticalGroup(
            LPpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LPpanelLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnConfirmLP)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout detailPanelLayout = new javax.swing.GroupLayout(detailPanel);
        detailPanel.setLayout(detailPanelLayout);
        detailPanelLayout.setHorizontalGroup(
            detailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(FBSpanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(detailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(detailPanelLayout.createSequentialGroup()
                    .addGap(0, 238, Short.MAX_VALUE)
                    .addComponent(FBCpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 239, Short.MAX_VALUE)))
            .addGroup(detailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(detailPanelLayout.createSequentialGroup()
                    .addGap(0, 247, Short.MAX_VALUE)
                    .addComponent(UFRpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 247, Short.MAX_VALUE)))
            .addGroup(detailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(detailPanelLayout.createSequentialGroup()
                    .addGap(0, 228, Short.MAX_VALUE)
                    .addComponent(TCpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 228, Short.MAX_VALUE)))
            .addGroup(detailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(detailPanelLayout.createSequentialGroup()
                    .addGap(0, 194, Short.MAX_VALUE)
                    .addComponent(LPpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 195, Short.MAX_VALUE)))
        );
        detailPanelLayout.setVerticalGroup(
            detailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(detailPanelLayout.createSequentialGroup()
                .addComponent(FBSpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 84, Short.MAX_VALUE))
            .addGroup(detailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(detailPanelLayout.createSequentialGroup()
                    .addGap(0, 21, Short.MAX_VALUE)
                    .addComponent(FBCpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 21, Short.MAX_VALUE)))
            .addGroup(detailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(detailPanelLayout.createSequentialGroup()
                    .addGap(0, 19, Short.MAX_VALUE)
                    .addComponent(UFRpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 19, Short.MAX_VALUE)))
            .addGroup(detailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(detailPanelLayout.createSequentialGroup()
                    .addGap(0, 58, Short.MAX_VALUE)
                    .addComponent(TCpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 58, Short.MAX_VALUE)))
            .addGroup(detailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(detailPanelLayout.createSequentialGroup()
                    .addGap(0, 77, Short.MAX_VALUE)
                    .addComponent(LPpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 78, Short.MAX_VALUE)))
        );

        jLabel2.setText("YYYY");

        jLabel3.setText("MM");

        jLabel5.setText("DD");

        textYear.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N

        textMonth.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(detailsOfTestLable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(70, 70, 70))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(detailPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(titleName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(reportName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(patientID, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textPatientID)
                                .addGap(205, 205, 205)
                                .addComponent(testID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(TestBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(149, 149, 149)
                                .addComponent(testName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textTestName, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(labTechnicianID)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textLabTecID, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(341, 341, 341)
                                .addComponent(date, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textYear, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(textDate, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(23, 23, 23)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleName, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(reportName, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(patientID)
                        .addComponent(textPatientID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(testName)
                        .addComponent(textTestName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(testID)
                        .addComponent(TestBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(detailsOfTestLable)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(detailPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labTechnicianID)
                    .addComponent(date)
                    .addComponent(textDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textLabTecID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textPatientIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textPatientIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textPatientIDActionPerformed

    private void textTestNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textTestNameActionPerformed
        
        
    }//GEN-LAST:event_textTestNameActionPerformed

    private void textTestNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textTestNameFocusGained
        
    }//GEN-LAST:event_textTestNameFocusGained

    private void TestBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TestBoxActionPerformed
        String s=(String) TestBox.getSelectedItem();
        switch (s) {
            case "01":
                textTestName.setText("Fasting Blood Sugar");
                FBCpanel.setVisible(false);
                FBSpanel.setVisible(true);
                TCpanel.setVisible(false);
                UFRpanel.setVisible(false);
                LPpanel.setVisible(false);
                break;
            case "02":
                textTestName.setText("Urine Full Report");
                FBCpanel.setVisible(false);
                FBSpanel.setVisible(false);
                TCpanel.setVisible(false);
                UFRpanel.setVisible(true);
                LPpanel.setVisible(false);
                break;
            case "03":
                textTestName.setText("Full Blood Count");
                FBCpanel.setVisible(true);
                FBSpanel.setVisible(false);
                TCpanel.setVisible(false);
                UFRpanel.setVisible(false);
                LPpanel.setVisible(false);
                break;
            case "04":
                textTestName.setText("Serum Lipid Profile");
                FBCpanel.setVisible(false);
                FBSpanel.setVisible(false);
                TCpanel.setVisible(false);
                UFRpanel.setVisible(false);
                LPpanel.setVisible(true);
                break;
            case "05":
                textTestName.setText("Total Cholesterol");
                FBCpanel.setVisible(false);
                FBSpanel.setVisible(false);
                TCpanel.setVisible(true);
                UFRpanel.setVisible(false);
                LPpanel.setVisible(false);
                break;
        }
    }//GEN-LAST:event_TestBoxActionPerformed

    private void jLabel7AncestorMoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jLabel7AncestorMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel7AncestorMoved

    private void CholesterolAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CholesterolAmountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CholesterolAmountActionPerformed

    private void btnConfirmUFRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmUFRActionPerformed
        LabReport l=new LabReport();
        DBOperations ad = new DBOperations();
        String item=(String)TestBox.getSelectedItem();
        l.setLabReportNo(Integer.valueOf(item));
        String tecId=textLabTecID.getText();
        String pid=textPatientID.getText();
        String data;
        try{
            if(Integer.valueOf(pid) instanceof Integer){
                l.setPID(Integer.valueOf(pid));
                System.out.println("setter of pid in FBS confirm btn");
            }
        }catch(NumberFormatException ex){
            JOptionPane.showMessageDialog(null, "Patient ID is incorrect");
            textPatientID.setText(null);
        }
        try{
            if(Integer.valueOf(tecId) instanceof Integer){
                l.setLabTechID(Integer.valueOf(tecId));
                System.out.println("setter of tec id in FBS confirm btn");
            }
        }catch(NumberFormatException ex){
            JOptionPane.showMessageDialog(null, "Lab technician ID is incorrect");
            textLabTecID.setText(null);
        }
        for(int i=0;i<UFRtable.getRowCount();i++){
            data=(String)UFRtable.getValueAt(i,1);
           // System.out.println(Double.valueOf(data));
                l.addDataToTheList(data);
                System.out.println(data+" result "+i);
        }  
        try{
            if(Integer.valueOf(textYear.getText())instanceof Integer && Integer.valueOf(textMonth.getText())instanceof Integer && Integer.valueOf(textDate.getText())instanceof Integer){
                l.setDate(Help.getDate(Integer.valueOf(textYear.getText()), Integer.valueOf(textMonth.getText()), Integer.valueOf(textDate.getText())));
            }
        }catch(NumberFormatException ex){
            JOptionPane.showMessageDialog(null, "Date is incorrect");
            textYear.setText(null);
            textMonth.setText(null);
            textDate.setText(null);
        }
       // ad.addLabReport(l);
    }//GEN-LAST:event_btnConfirmUFRActionPerformed

    private void btnConfirmTCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmTCActionPerformed
        LabReport l=new LabReport();
        DBOperations ad = new DBOperations();
        String item=(String)TestBox.getSelectedItem();
        l.setLabReportNo(Integer.valueOf(item));
        String tecId=textLabTecID.getText();
        String pid=textPatientID.getText();
        String data=CholesterolAmount.getText();
        try{
            if(Integer.valueOf(pid) instanceof Integer){
                l.setPID(Integer.valueOf(pid));
                System.out.println("setter of pid in TC confirm btn");
            }
        }catch(NumberFormatException ex){
            JOptionPane.showMessageDialog(null, "Patient ID is incorrect");
            textPatientID.setText(null);
        }
        try{
            if(Integer.valueOf(tecId) instanceof Integer){
                l.setLabTechID(Integer.valueOf(tecId));
                System.out.println("setter of tec id in TC confirm btn");
            }
        }catch(NumberFormatException ex){
            JOptionPane.showMessageDialog(null, "Lab technician ID is incorrect");
            textLabTecID.setText(null);
        }
        try{
            if(Double.valueOf(data) instanceof Double){
                 l.addDataToTheList(data);
            }
        }catch(NumberFormatException ex){
            JOptionPane.showMessageDialog(null, "Data is incorrect");
            CholesterolAmount.setText(null);
        }
        try{
            if(Integer.valueOf(textYear.getText())instanceof Integer && Integer.valueOf(textMonth.getText())instanceof Integer && Integer.valueOf(textDate.getText())instanceof Integer){
                l.setDate(Help.getDate(Integer.valueOf(textYear.getText()), Integer.valueOf(textMonth.getText()), Integer.valueOf(textDate.getText())));
            }
        }catch(NumberFormatException ex){
            JOptionPane.showMessageDialog(null, "Date is incorrect");
            textYear.setText(null);
            textMonth.setText(null);
            textDate.setText(null);
        }
        //ad.addLabReport(l);
    }//GEN-LAST:event_btnConfirmTCActionPerformed

    private void btnconfirmFBSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnconfirmFBSActionPerformed
        LabReport l=new LabReport();
        DBOperations ad = new DBOperations();
        String item=(String)TestBox.getSelectedItem();
        l.setLabReportNo(Integer.valueOf(item));
        String tecId=textLabTecID.getText();
        String pid=textPatientID.getText();
        String data=fbsAmount.getText();
        try{
            if(Integer.valueOf(pid) instanceof Integer){
                l.setPID(Integer.valueOf(pid));
                System.out.println("setter of pid in FBS confirm btn");
            }
        }catch(NumberFormatException ex){
            JOptionPane.showMessageDialog(null, "Patient ID is incorrect");
            textPatientID.setText(null);
        }
        try{
            if(Integer.valueOf(tecId) instanceof Integer){
                l.setLabTechID(Integer.valueOf(tecId));
                System.out.println("setter of tec id in FBS confirm btn");
            }
        }catch(NumberFormatException ex){
            JOptionPane.showMessageDialog(null, "Lab technician ID is incorrect");
            textLabTecID.setText(null);
        }
        try{
            if(Double.valueOf(data) instanceof Double){
                 l.addDataToTheList(data);
                 System.out.println("setting data in FBS");
            }
        }catch(NumberFormatException ex){
            JOptionPane.showMessageDialog(null, "Data is incorrect");
            fbsAmount.setText(null);
        }
        try{
            if(Integer.valueOf(textYear.getText())instanceof Integer && Integer.valueOf(textMonth.getText())instanceof Integer && Integer.valueOf(textDate.getText())instanceof Integer){
                l.setDate(Help.getDate(Integer.valueOf(textYear.getText()), Integer.valueOf(textMonth.getText()), Integer.valueOf(textDate.getText())));
            }
        }catch(NumberFormatException ex){
            JOptionPane.showMessageDialog(null, "Date is incorrect");
            textYear.setText(null);
            textMonth.setText(null);
            textDate.setText(null);
        }
        //ad.addLabReport(l);
    }//GEN-LAST:event_btnconfirmFBSActionPerformed

    private void btnConfirmLPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmLPActionPerformed
        LabReport l=new LabReport();
        DBOperations ad = new DBOperations();
        String item=(String)TestBox.getSelectedItem();
        l.setLabReportNo(Integer.valueOf(item));
        String tecId=textLabTecID.getText();
        String pid=textPatientID.getText();
        String data;
        try{
            if(Integer.valueOf(pid) instanceof Integer){
                l.setPID(Integer.valueOf(pid));
                System.out.println("setter of pid in FBS confirm btn");
            }
        }catch(NumberFormatException ex){
            JOptionPane.showMessageDialog(null, "Patient ID is incorrect");
            textPatientID.setText(null);
        }
        try{
            if(Integer.valueOf(tecId) instanceof Integer){
                l.setLabTechID(Integer.valueOf(tecId));
                System.out.println("setter of tec id in FBS confirm btn");
            }
        }catch(NumberFormatException ex){
            JOptionPane.showMessageDialog(null, "Lab technician ID is incorrect");
            textLabTecID.setText(null);
        }
        for(int i=0;i<LPtable.getRowCount();i++){
            data=(String)LPtable.getValueAt(i,1);
           // System.out.println(Double.valueOf(data));
                l.addDataToTheList(data);
                System.out.println(data+" result "+i);
        }  
        try{
            if(Integer.valueOf(textYear.getText())instanceof Integer && Integer.valueOf(textMonth.getText())instanceof Integer && Integer.valueOf(textDate.getText())instanceof Integer){
                l.setDate(Help.getDate(Integer.valueOf(textYear.getText()), Integer.valueOf(textMonth.getText()), Integer.valueOf(textDate.getText())));
            }
        }catch(NumberFormatException ex){
            JOptionPane.showMessageDialog(null, "Date is incorrect");
            textYear.setText(null);
            textMonth.setText(null);
            textDate.setText(null);
        }
       // ad.addLabReport(l);
    }//GEN-LAST:event_btnConfirmLPActionPerformed

    private void LPtableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_LPtableKeyReleased
        int num=evt.getKeyCode();
        //System.out.println(evt.getKeyCode()+"  keycode");
        if((96<=num && 105>=num)||num==110 || evt.isActionKey()|| num==10){
            
        }else{
            cellEditor=(DefaultCellEditor)LPtable.getCellEditor(LPtable.getSelectedRow(),LPtable.getSelectedColumn());
            ((JTextField)cellEditor.getComponent()).setText(str);
          
            
            //JOptionPane.showMessageDialog(null, "Date is incorrect");
        }
    }//GEN-LAST:event_LPtableKeyReleased

    private void LPtableKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_LPtableKeyTyped
        
    }//GEN-LAST:event_LPtableKeyTyped

    private void btnConfirmFBCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmFBCActionPerformed
       LabReport l=new LabReport();
        DBOperations ad = new DBOperations();
        String item=(String)TestBox.getSelectedItem();
        l.setLabReportNo(Integer.valueOf(item));
        String tecId=textLabTecID.getText();
        String pid=textPatientID.getText();
        String data;
        try{
            if(Integer.valueOf(pid) instanceof Integer){
                l.setPID(Integer.valueOf(pid));
                System.out.println("setter of pid in FBS confirm btn");
            }
        }catch(NumberFormatException ex){
            JOptionPane.showMessageDialog(null, "Patient ID is incorrect");
            textPatientID.setText(null);
        }
        try{
            if(Integer.valueOf(tecId) instanceof Integer){
                l.setLabTechID(Integer.valueOf(tecId));
                System.out.println("setter of tec id in FBS confirm btn");
            }
        }catch(NumberFormatException ex){
            JOptionPane.showMessageDialog(null, "Lab technician ID is incorrect");
            textLabTecID.setText(null);
        }
        for(int i=0;i<FBCtable.getRowCount();i++){
            data=(String)FBCtable.getValueAt(i,1);
           // System.out.println(Double.valueOf(data));
                l.addDataToTheList(data);
                System.out.println(data+" result "+i);
        }  
        try{
            if(Integer.valueOf(textYear.getText())instanceof Integer && Integer.valueOf(textMonth.getText())instanceof Integer && Integer.valueOf(textDate.getText())instanceof Integer){
                l.setDate(Help.getDate(Integer.valueOf(textYear.getText()), Integer.valueOf(textMonth.getText()), Integer.valueOf(textDate.getText())));
            }
        }catch(NumberFormatException ex){
            JOptionPane.showMessageDialog(null, "Date is incorrect");
            textYear.setText(null);
            textMonth.setText(null);
            textDate.setText(null);
        }
       // ad.addLabReport(l);
    }//GEN-LAST:event_btnConfirmFBCActionPerformed

    private void FBCtableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FBCtableKeyReleased
        int num=evt.getKeyCode();
        //System.out.println(evt.getKeyCode()+"  keycode");
        if((96<=num && 105>=num)||num==110 || evt.isActionKey()|| num==10){
            
        }else{
            cellEditor=(DefaultCellEditor)FBCtable.getCellEditor(FBCtable.getSelectedRow(),FBCtable.getSelectedColumn());
            ((JTextField)cellEditor.getComponent()).setText(null);
          
            
            //JOptionPane.showMessageDialog(null, "Date is incorrect");
        }
    }//GEN-LAST:event_FBCtableKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LabReportGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LabReportGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LabReportGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LabReportGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                LabReportGUI l=new LabReportGUI();
                l.setTitle("Lab Report");
                l.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CholesterolAmount;
    private javax.swing.JPanel FBCpanel;
    private javax.swing.JTable FBCtable;
    private javax.swing.JPanel FBSpanel;
    private javax.swing.JPanel LPpanel;
    private javax.swing.JTable LPtable;
    private javax.swing.JPanel TCpanel;
    private javax.swing.JComboBox TestBox;
    private javax.swing.JPanel UFRpanel;
    private javax.swing.JTable UFRtable;
    private javax.swing.JButton btnConfirmFBC;
    private javax.swing.JButton btnConfirmLP;
    private javax.swing.JButton btnConfirmTC;
    private javax.swing.JButton btnConfirmUFR;
    private javax.swing.JButton btnconfirmFBS;
    private javax.swing.JLabel date;
    private javax.swing.JPanel detailPanel;
    private javax.swing.JLabel detailsOfTestLable;
    private javax.swing.JTextField fbsAmount;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel labTechnicianID;
    private javax.swing.JLabel patientID;
    private javax.swing.JLabel reportName;
    private javax.swing.JLabel testID;
    private javax.swing.JLabel testName;
    private javax.swing.JTextField textDate;
    private javax.swing.JTextField textLabTecID;
    private javax.swing.JTextField textMonth;
    private javax.swing.JTextField textPatientID;
    private javax.swing.JTextField textTestName;
    private javax.swing.JTextField textYear;
    private javax.swing.JLabel titleName;
    // End of variables declaration//GEN-END:variables
}
